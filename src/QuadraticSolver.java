public class QuadraticSolver {

    /**
     * Реализуйте алгоритм нахождения всех <b>целых</b> корней квадратного уравнения
     * вида <code>x^2 + px + q = 0</code>. Найденные корни выведите в поток
     * стандартного вывода методом {@link java.io.PrintStream#print(long)} объекта
     * {@link java.lang.System#out}. Корни можно выводить в любом порядке. Ошибки
     * можно игнорироввать. Если у квадратного уравнения нету целых корней, следует вывести
     * соответствующее сообщение.
     *
     * @param args массив с коэфицентами полинома в текстовом представлении.
     */
    public static void main(String[] args) {
        long p = Long.parseLong(args[0]);
        long q = Long.parseLong(args[1]);

        System.out.println(p * q);
        long discriminant = p*p-4*q;

        System.out.println(squareRoot(discriminant));
        System.out.println("Нет целых решений");
    }

    /**
     * Реализуйте вспомогательную функцию для вычисления квадратного корня из числа
     * {@code n}. Запрещено использовать готовые библиотечные реализации. Алгоритм
     * должен быть основан на бинарном поиске, методе ньютона или аналогах.
     *
     * @param n целое число
     * @return квадратный корень из числа {@code n}, либо {@code -1}, если {@code n}
     *         не является полным квадратом. Также можете в этом методе заодно
     *         проверять, что {@code n} - неотрицательное число, и возвращать
     *         {@code -1} в противном случае.
     */
    static long squareRoot(long n) {
        return 0;
    }

}
